package cc.ywxm.service.impl.game;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.json.JSONException;
import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import cc.ywxm.client.ZMQClient;
import cc.ywxm.client.ZMQRecvTimeoutException;
import cc.ywxm.constant.Const;
import cc.ywxm.dao.game.BaseInfoDao;
import cc.ywxm.service.game.KickService;

@Transactional
@Service
public class KickServiceImpl implements KickService
{

	private Logger log = LoggerFactory.getLogger(this.getClass());
	@Resource
	private BaseInfoDao baseInfoDao;

	public List<String> readCsv(File csvFile)
	{
		List<String> result = new ArrayList<String>();
		File file = csvFile;
		return result;// 操作成功
	}

	// public List<String> readTxt(File txtFile)
	// {
	// List<String> result = new ArrayList<String>();
	// File file = txtFile;
	// try
	// {
	// FileInputStream inStream = new FileInputStream(file);
	// InputStreamReader reader = new InputStreamReader(inStream);
	// BufferedReader bufferedReader = new BufferedReader(reader);
	// StringBuffer sb = new StringBuffer();
	// String line = "";
	// while ((line = bufferedReader.readLine()) != null)
	// {
	// line = line.replace(" ", "");
	// sb.append(line);
	// }
	// String dataString = sb.toString();
	// String[] strs = dataString.split(",");
	// List<Integer> dataList = new ArrayList<Integer>();
	// for (String string : strs)
	// {
	// if (string == null || "".equals(string))
	// {
	// continue;
	// }
	// Integer player = Integer.parseInt(string);
	// if (dataList.contains(player))
	// {
	// continue;
	// }
	// dataList.add(player);
	// }
	// for (Integer data : dataList)
	// {
	// System.out.println(data);
	// }
	// return 1;// 操作成功
	// } catch (FileNotFoundException e)
	// {
	// e.printStackTrace();
	// } catch (IOException e)
	// {
	// e.printStackTrace();
	// } catch (NumberFormatException e)
	// {
	// // e.printStackTrace();
	// return 2;// 存在无效玩家ID
	// }
	// return 0;
	// }

	public int kick(String serverIP, File file, String extension)
	{
		if ("csv".equals(extension))
		{
			readCsv(file);
			return 1;
		} else
		{
			return -1;
		}
	}

	public int kick(String serverIP, String player)
	{
		if (player == null || player.trim().equals(""))
		{
			return CODE_PLAYER_NULL;
		}
		int id = 0;
		try
		{
			id = Integer.parseInt(player);
		} catch (NumberFormatException e)
		{
			try
			{
				id = baseInfoDao.findPlayerByNickname(player);
			} catch (Exception exc)
			{
				log.error(exc.getMessage());
				return CODE_PLAYER_NOT_EXIST;
			}
		}
		ZMQClient client = new ZMQClient("tcp://" + serverIP + ":"
				+ Const.GM_PORT);
		try
		{
			// System.out.println(id);
			String returnJSON = client.call(id, Const.GM_KICK, 0, "");
			JSONObject jsonObject = new JSONObject(returnJSON);
			int code = jsonObject.getInt("result");
			return code;
		} catch (ZMQRecvTimeoutException e)
		{
			log.error(e.getMessage());
			return CODE_ZMQ_TIMEOUT;
		} catch (JSONException e)
		{
			log.error(e.getMessage());
			return CODE_JSON_ERROR;
		}

	}

	public int kick(String serverIP)
	{
		ZMQClient client = new ZMQClient("tcp://" + serverIP + ":"
				+ Const.GM_PORT);
		try
		{
			String returnJSON = client.call(-1, Const.GM_KICK, 0, "");
			JSONObject jsonObject = new JSONObject(returnJSON);
			int code = jsonObject.getInt("result");
			return code;
		} catch (ZMQRecvTimeoutException e)
		{
			log.error(e.getMessage());
			return CODE_ZMQ_TIMEOUT;
		} catch (JSONException e)
		{
			log.error(e.getMessage());
			return CODE_JSON_ERROR;
		}
	}

}
