package cc.ywxm.action.game;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.apache.struts2.json.JSONException;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import cc.ywxm.action.BaseAction;
import cc.ywxm.constant.Const;
import cc.ywxm.datasource.CustomerContextHolder;
import cc.ywxm.model.gm.Server;
import cc.ywxm.service.game.KickService;
import cc.ywxm.share.ShareData;

/**
 * 踢人
 * 
 * @author hdc
 * 
 */
@SuppressWarnings("serial")
@Controller
@Scope("prototype")
public class KickAction extends BaseAction
{
	private int type = 0;
	private Integer player;
	private String nickname;
	private List<Server> servers = new ArrayList<Server>();
	private File data;
	private String dataContentType;
	private String dataFileName;
	private String server;

	@Resource
	private KickService kickService;

	/**
	 * 踢人页面
	 * 
	 */
	public String kick()
	{

		servers = ShareData.getServers();
		return SUCCESS;
	}

	/**
	 * ajax doQuery
	 * 
	 * @return
	 * @throws IOException
	 * @throws JSONException
	 */
	public String doKick() throws IOException, JSONException
	{
		Server dbsrv = (Server) session.get(Const.SESSION_DBSRV);
		CustomerContextHolder.setCustomerType(dbsrv.getDataSource());
		switch (type)
		{
		case 1:// ID踢
			if (player == null)
			{
				message = "未输入玩家ID";
			} else
			{
				message = player + "";
			}
			break;
		case 2:// 昵称踢
			if (nickname == null || "".equals(nickname))
			{
				message = "未输入玩家昵称";
			} else
			{
				message = nickname;
			}
			break;
		case 3:// 批量踢
			// text/plain .txt .log etc
			// application/vnd.ms-excel .xls etc
			if ("text/plain".equals(dataContentType))
			{
				int code = 0;
				code = kickService.textKick(data);
				switch (code)
				{
				case 1:
					message = "操作成功";
					break;
				case 2:
					message = "数据文件存在无效玩家ID，操作失败";
					break;
				default:
					message = "未知错误，操作失败";
					break;
				}
			} else if ("application/vnd.ms-excel".equals(dataContentType))
			{
				int code = 0;
				code = kickService.excelKick(data);
				switch (code)
				{
				case 1:
					message = "操作成功";
					break;
				case 2:
					message = "数据文件存在无效玩家ID，操作失败";
					break;
				case 3:
					message = "无效数据文件格式，操作失败";
					break;
				default:
					message = "未知错误，操作失败";
					break;
				}
			} else if (dataContentType == null || "".equals(dataContentType))
			{
				message = "未选择文件";
			} else
			{
				message = "不支持的文件格式";
			}
			break;
		case 4:// 当前服务器踢
			server = ((Server) session.get(Const.SESSION_DBSRV)).getId();
			message = server;
			break;
		case 5:// 选择服务器踢
			message = server;
			break;
		default:
			return NONE;
		}
		response.setContentType("text/html;charset=utf-8");
		response.setHeader("Cache-Control", "no-cache");
		PrintWriter out = response.getWriter();
		out.append(message);
		out.close();

		return NONE;
	}

	public Integer getPlayer()
	{
		return player;
	}

	public void setPlayer(Integer player)
	{
		this.player = player;
	}

	public String getNickname()
	{
		return nickname;
	}

	public void setNickname(String nickname)
	{
		this.nickname = nickname;
	}

	public int getType()
	{
		return type;
	}

	public void setType(int type)
	{
		this.type = type;
	}

	public List<Server> getServers()
	{
		return servers;
	}

	public void setServers(List<Server> servers)
	{
		this.servers = servers;
	}

	public File getData()
	{
		return data;
	}

	public void setData(File data)
	{
		this.data = data;
	}

	public String getDataContentType()
	{
		return dataContentType;
	}

	public void setDataContentType(String dataContentType)
	{
		this.dataContentType = dataContentType;
	}

	public String getDataFileName()
	{
		return dataFileName;
	}

	public void setDataFileName(String dataFileName)
	{
		this.dataFileName = dataFileName;
	}

	public String getServer()
	{
		return server;
	}

	public void setServer(String server)
	{
		this.server = server;
	}

}
