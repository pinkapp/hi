package cc.ywxm.dao.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.stereotype.Repository;

import cc.ywxm.action.Pageable;
import cc.ywxm.dao.NewsDao;
import cc.ywxm.model.News;
import cc.ywxm.utils.RSMapper;
import cc.ywxm.vo.NewsVo;

@Repository
public class NewsDaoImpl implements NewsDao
{
	@Resource
	private HibernateTemplate hibernateTemplate;
	@Resource
	private JdbcTemplate jdbcTemplate;

	public void save(News news)
	{
		hibernateTemplate.save(news);
	}

	public void delete(News news)
	{
		hibernateTemplate.delete(news);
	}

	public void update(News news)
	{
		hibernateTemplate.update(news);
	}

	public News findById(Integer newsId)
	{
		News news;
		try
		{
			news = (News) hibernateTemplate.get(News.class, newsId);
		} catch (DataAccessException e)
		{
			e.printStackTrace();
			return null;
		}
		return news;
	}

	public List<NewsVo> findByPage(NewsVo condition, Pageable pageable)
	{
		String sql = "SELECT t.news_id, t.newstitle, t.newsurl FROM news t WHERE 1 = 1";
		if (condition != null)
		{
			List<Object> args = new ArrayList<Object>();
			if (StringUtils.isNotEmpty(condition.getNewstitle()))
			{
				sql += " AND t.newstitle like ?";
				args.add("%" + condition.getNewstitle() + "%");
			}
			sql += " ORDER BY t.news_id desc";
			return RSMapper.queryPage(jdbcTemplate, sql, pageable,
					NewsVo.class, args.toArray());
		} else
		{
			sql += " ORDER BY t.news_id desc";
			return RSMapper
					.queryPage(jdbcTemplate, sql, pageable, NewsVo.class);
		}
	}

	@SuppressWarnings("unchecked")
	public List<News> findAll()
	{
		return hibernateTemplate.find("from News");
	}

}
